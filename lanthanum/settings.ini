# Sample configuration file with all recognized parameters (some are commented out as they are not needed for this specific case)
# Not all settings will be required - e.g. if ensemble is set to "2" (NVT), no need to set a value for pressure

# General keyword: parameters that apply to all parts of the FEP process
# Keep all parameters on separate lines!
general {

	# directory in which to create file structure (if not specified defaults to working directory)
	# specification is optional
	# targetDirectory /path/to/targetDirectory

	# IF TARGET DIRECTORY IS NOT SPECIFIED, USE RELATIVE (TO WORKING DIR) PATHS FOR BELOW PARAMETERS 
	# IF TARGET DIRECTORY IS SPECIFIED, USE ABSOLUTE PATHS INSTEAD

	# path of xyz to use for FEP
	xyz la_water_cluster.xyz
	# path of key to use for FEP. Note: Key must specify a parameters file, but need not be the one listed below as line will be overwritten anyway
	key la_water_cluster.key
	# path of prm to use for FEP
	prm amoebabio09.prm
	# ini containing list of server nodes and their properties to use for FEP
	nodeINI nodes.ini
	# Sets the type of nodes the program will prefer to use. Options are "fastest" (best benchmarked GPUs), "slowest" (worst benchmarked GPUs), "memory" (most memory), "random" (randomize order). 
	# If left unset nodes will be selected in order they appear in the node ini file
	nodePreference fastest

	# ALWAYS USE ABSOLUTE PATHS FOR BELOW PARAMETERS

	# files to source for cuda 8.0 tinker on GTX series cards
	cuda11Source /home/liuchw/OpenMM-Feb-2021/openmm.bashrc
	# directory containing cuda 8.0 executables: dynamic_omm.x, bar_omm.x
	cuda11Home /home/liuchw/Softwares/tinkers/Tinker9-latest/build_cuda11.2
	# files to source for cuda 10.0 tinker on RTX series cards
	cuda10Source /home/liuchw/OpenMM-Nov-2020/openmm.bashrc 
	# directory containing cuda 10.0 executables: dynamic_omm.x, bar_omm.x
	cuda10Home /home/liuchw/Softwares/tinkers/Tinker9-latest/build_cuda10.2
}

# Setup keyword: Specify values for vdw ele and lambda for each stage
# Keep all parameters on separate lines!
setup {
	vdwLambdas 0.00 0.50 0.55 0.60 0.65 0.70 0.75 0.80 0.90 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00 1.00
	eleLambdas 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.10 0.20 0.30 0.40 0.50 0.60 0.70 0.80 0.90 1.00
}

# Dynamic keyword: specify parameters for dynamics
# Keep all parameters on separate lines!
dynamic {
	# order determines which block of settings will be used first (e.g. order 1 runs before order 100)
	order 1
	# name determines name of log file for this run
	name predynamic
	# number of times to call dynamic with these settings
	repetitions 1
	# Dynamic step interval in femtoseconds
	stepInterval 1
	# Dynamic save interval in picoseconds
	saveInterval 1
	# Dynamic simulation time in nanoseconds
	simulationTime .001
	# Ensemble type: set to 1, 2, 3, or 4 as when using Tinker dynamic.x via command line (ex. 2 = NVT)
	ensemble 4
	# temperature for dynamic in Kelvin
	temp 200
	# pressure for dynamic in Bar 
	pressure 1
}

# Dynamic keyword: specify parameters for dynamics
# Keep all parameters on separate lines!
dynamic {
	# order determines which block of settings will be used first (e.g. order 1 runs before order 100)
	order 2
	# name determines name of log file for this run
	name dynamic
	# number of times to call dynamic with these settings
	repetitions 2
	# Dynamic step interval in femtoseconds
	stepInterval 2
	# Dynamic save interval in picoseconds
	saveInterval 3
	# Dynamic simulation time in nanoseconds
	simulationTime .05
	# Ensemble type: set to 1, 2, 3, or 4 as in Tinker (ex. 2 = NVT)
	ensemble 4
	# temperature for dynamic in K
	temp 298.15
	# pressure for dynamic in bar 
	pressure 1
}

# BAR keyword: specify parameters for BAR
# Keep all parameters on separate lines!
bar {
	# temp for BAR
	temp 298.15
	# frame interval for BAR
	frameInterval 1
}
